// Components/translations.ts
export const translations = {
  en: {
    // Header
    editCustomer: "тЬПя╕П Edit Customer",
    addNewCustomer: "тЮХ Add New Customer",
    updateCustomerDetails: "Update customer details",
    fillCustomerDetails: "Fill in the customer details",
    
    // Photo Section
    waterPurifierPhoto: "ЁЯТз Water Purifier Photo",
    optional: "Optional",
    required: "Required",
    addPhotoDescription: "Add a photo of the water purifier for reference",
    changePhoto: "Change Photo",
    addPhoto: "Add Photo",
    takePhotoOrChoose: "Take a photo or choose from gallery",
    waterPurifierPhotoTitle: "Water Purifier Photo",
    choosePhotoMethod: "Choose how you'd like to add a photo",
    cancel: "Cancel",
    takePhoto: "Take Photo",
    chooseFromGallery: "Choose from Gallery",
    removePhoto: "Remove Photo",
    
    // Customer Details
    customerDetails: "ЁЯСд Customer Details",
    fullName: "Full Name",
    enterFullName: "Enter customer's full name",
    phoneNumber: "Phone Number",
    phonePlaceholder: "+91 XXXXX XXXXX",
    address: "Address",
    enterAddress: "Enter full address with landmark",
    
    // SMS Reminder
    smsReminderSettings: "ЁЯУ▒ SMS Reminder Settings",
    smsReminderDescription: "Set automatic SMS reminders for service follow-ups",
    date: "Date",
    selectDate: "Select date",
    time: "Time",
    selectTime: "Select time",
    messageType: "Message Type",
    defaultMessage: "Default Message",
    customMessage: "Custom Message",
    customMessageLabel: "Custom Message",
    writeOwnMessage: "Write your own message",
    enterCustomMessage: "Enter your custom reminder message...",
    testSMS: "Test SMS",
    smsReminderScheduled: "тЬУ SMS Reminder Scheduled",
    at: "at",
    viaSMS: "via SMS from",
    
    // Default SMS Message
    defaultSMSTemplate: (name: string, phone: string) => 
      `Hi ${name}, this is a reminder that your water purifier service time has come. Please contact us at ${phone}. Thank you!`,
    
    // Buttons
    cancelButton: "Cancel",
    updateCustomer: "ЁЯТ╛ Update Customer",
    saveCustomer: "тЬУ Save Customer",
    saving: "Saving...",
    
    // Alerts & Validation
    permissionRequired: "Permission Required",
    cameraPermissionMessage: "Camera permission is recommended to take photos.",
    galleryPermissionMessage: "Gallery permission is needed to select photos.",
    validationError: "Validation Error",
    enterCustomerName: "Please enter customer name",
    enterPhoneNumber: "Please enter phone number",
    enterValidPhone: "Please enter a valid phone number",
    enterAddressError: "Please enter address",
    reminderDateFuture: "Reminder date must be in the future",
    enterCustomMessageError: "Please enter a custom message",
    error: "Error",
    enterPhoneFirst: "Please enter a phone number first",
    smsNotAvailable: "SMS Not Available",
    smsNotAvailableMessage: "SMS functionality is not available on this device",
    smsError: "SMS Error",
    smsErrorMessage: "Failed to send SMS. Please try again.",
    success: "Success",
    customerUpdatedSuccess: (date: string, time: string) => 
      `Customer updated successfully! SMS reminder set for ${date} at ${time}.`,
    customerAddedSuccess: (date: string, time: string) => 
      `Customer added successfully! SMS reminder set for ${date} at ${time}.`,
    customerUpdatedSimple: "Customer updated successfully!",
    customerAddedSimple: "Customer added successfully!",
    updateError: "Failed to update customer. Please check your internet connection and try again.",
    saveError: "Failed to save customer. Please check your internet connection and try again.",
  },
  mr: {
    // Header
    editCustomer: "тЬПя╕П рдЧреНрд░рд╛рд╣рдХ рд╕рдВрдкрд╛рджрд┐рдд рдХрд░рд╛",
    addNewCustomer: "тЮХ рдирд╡реАрди рдЧреНрд░рд╛рд╣рдХ рдЬреЛрдбрд╛",
    updateCustomerDetails: "рдЧреНрд░рд╛рд╣рдХ рддрдкрд╢реАрд▓ рдЕрдкрдбреЗрдЯ рдХрд░рд╛",
    fillCustomerDetails: "рдЧреНрд░рд╛рд╣рдХрд╛рдЪреЗ рддрдкрд╢реАрд▓ рднрд░рд╛",
    
    // Photo Section
    waterPurifierPhoto: "ЁЯТз рд╡реЙрдЯрд░ рдкреНрдпреБрд░рд┐рдлрд╛рдпрд░рдЪрд╛ рдлреЛрдЯреЛ",
    optional: "рдРрдЪреНрдЫрд┐рдХ",
    required: "рдЖрд╡рд╢реНрдпрдХ",
    addPhotoDescription: "рд╕рдВрджрд░реНрднрд╛рд╕рд╛рдареА рд╡реЙрдЯрд░ рдкреНрдпреБрд░рд┐рдлрд╛рдпрд░рдЪрд╛ рдлреЛрдЯреЛ рдЬреЛрдбрд╛",
    changePhoto: "рдлреЛрдЯреЛ рдмрджрд▓рд╛",
    addPhoto: "рдлреЛрдЯреЛ рдЬреЛрдбрд╛",
    takePhotoOrChoose: "рдлреЛрдЯреЛ рдХрд╛рдврд╛ рдХрд┐рдВрд╡рд╛ рдЧреЕрд▓рд░реАрдордзреВрди рдирд┐рд╡рдбрд╛",
    waterPurifierPhotoTitle: "рд╡реЙрдЯрд░ рдкреНрдпреБрд░рд┐рдлрд╛рдпрд░ рдлреЛрдЯреЛ",
    choosePhotoMethod: "рддреБрдореНрд╣реА рдлреЛрдЯреЛ рдХрд╕рд╛ рдЬреЛрдбреВ рдЗрдЪреНрдЫрд┐рддрд╛ рддреЗ рдирд┐рд╡рдбрд╛",
    cancel: "рд░рджреНрдж рдХрд░рд╛",
    takePhoto: "рдлреЛрдЯреЛ рдХрд╛рдврд╛",
    chooseFromGallery: "рдЧреЕрд▓рд░реАрдордзреВрди рдирд┐рд╡рдбрд╛",
    removePhoto: "рдлреЛрдЯреЛ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛",
    
    // Customer Details
    customerDetails: "ЁЯСд рдЧреНрд░рд╛рд╣рдХ рддрдкрд╢реАрд▓",
    fullName: "рдкреВрд░реНрдг рдирд╛рд╡",
    enterFullName: "рдЧреНрд░рд╛рд╣рдХрд╛рдЪреЗ рдкреВрд░реНрдг рдирд╛рд╡ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    phoneNumber: "рдлреЛрди рдирдВрдмрд░",
    phonePlaceholder: "+91 XXXXX XXXXX",
    address: "рдкрддреНрддрд╛",
    enterAddress: "рдЦреВрдг рд╕рд╣ рдкреВрд░реНрдг рдкрддреНрддрд╛ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    
    // SMS Reminder
    smsReminderSettings: "ЁЯУ▒ SMS рд╕реНрдорд░рдгрдкрддреНрд░ рд╕реЗрдЯрд┐рдВрдЧреНрдЬ",
    smsReminderDescription: "рд╕рд░реНрд╡реНрд╣рд┐рд╕ рдлреЙрд▓реЛ-рдЕрдкрд╕рд╛рдареА рд╕реНрд╡рдпрдВрдЪрд▓рд┐рдд SMS рд╕реНрдорд░рдгрдкрддреНрд░ рд╕реЗрдЯ рдХрд░рд╛",
    date: "рддрд╛рд░реАрдЦ",
    selectDate: "рддрд╛рд░реАрдЦ рдирд┐рд╡рдбрд╛",
    time: "рд╡реЗрд│",
    selectTime: "рд╡реЗрд│ рдирд┐рд╡рдбрд╛",
    messageType: "рд╕рдВрджреЗрд╢ рдкреНрд░рдХрд╛рд░",
    defaultMessage: "рдбреАрдлреЙрд▓реНрдЯ рд╕рдВрджреЗрд╢",
    customMessage: "рд╕рд╛рдиреБрдХреВрд▓ рд╕рдВрджреЗрд╢",
    customMessageLabel: "рд╕рд╛рдиреБрдХреВрд▓ рд╕рдВрджреЗрд╢",
    writeOwnMessage: "рддреБрдордЪрд╛ рд╕реНрд╡рддрдГрдЪрд╛ рд╕рдВрджреЗрд╢ рд▓рд┐рд╣рд╛",
    enterCustomMessage: "рддреБрдордЪрд╛ рд╕рд╛рдиреБрдХреВрд▓ рд╕реНрдорд░рдгрдкрддреНрд░ рд╕рдВрджреЗрд╢ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛...",
    testSMS: "SMS рдЯреЗрд╕реНрдЯ рдХрд░рд╛",
    smsReminderScheduled: "тЬУ SMS рд╕реНрдорд░рдгрдкрддреНрд░ рд╢реЗрдбреНрдпреВрд▓ рдХреЗрд▓реЗ",
    at: "рд╡рд╛рдЬрддрд╛",
    viaSMS: "рдпрд╛рд╡рд░реВрди SMS",
    
    // Default SMS Message
    defaultSMSTemplate: (name: string, phone: string) => 
      `рдирдорд╕реНрдХрд╛рд░ ${name}, рд╣реЗ рдПрдХ рд╕реНрдорд░рдгрдкрддреНрд░ рдЖрд╣реЗ рдХреА рддреБрдордЪреНрдпрд╛ рд╡реЙрдЯрд░ рдкреНрдпреБрд░рд┐рдлрд╛рдпрд░рдЪреА рд╕рд░реНрд╡реНрд╣рд┐рд╕рдЪреА рд╡реЗрд│ рдЖрд▓реА рдЖрд╣реЗ. рдХреГрдкрдпрд╛ рдЖрдордЪреНрдпрд╛рд╢реА ${phone} рд╡рд░ рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛. рдзрдиреНрдпрд╡рд╛рдж!`,
    
    // Buttons
    cancelButton: "рд░рджреНрдж рдХрд░рд╛",
    updateCustomer: "ЁЯТ╛ рдЧреНрд░рд╛рд╣рдХ рдЕрдкрдбреЗрдЯ рдХрд░рд╛",
    saveCustomer: "тЬУ рдЧреНрд░рд╛рд╣рдХ рдЬрддрди рдХрд░рд╛",
    saving: "рдЬрддрди рдХрд░рдд рдЖрд╣реЗ...",
    
    // Alerts & Validation
    permissionRequired: "рдкрд░рд╡рд╛рдирдЧреА рдЖрд╡рд╢реНрдпрдХ",
    cameraPermissionMessage: "рдлреЛрдЯреЛ рдШреЗрдгреНрдпрд╛рд╕рд╛рдареА рдХреЕрдореЗрд░рд╛ рдкрд░рд╡рд╛рдирдЧреА рд╢рд┐рдлрд╛рд░рд╕реАрдп рдЖрд╣реЗ.",
    galleryPermissionMessage: "рдлреЛрдЯреЛ рдирд┐рд╡рдбрдгреНрдпрд╛рд╕рд╛рдареА рдЧреЕрд▓рд░реА рдкрд░рд╡рд╛рдирдЧреА рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ.",
    validationError: "рдкреНрд░рдорд╛рдгреАрдХрд░рдг рддреНрд░реБрдЯреА",
    enterCustomerName: "рдХреГрдкрдпрд╛ рдЧреНрд░рд╛рд╣рдХрд╛рдЪреЗ рдирд╛рд╡ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    enterPhoneNumber: "рдХреГрдкрдпрд╛ рдлреЛрди рдирдВрдмрд░ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    enterValidPhone: "рдХреГрдкрдпрд╛ рд╡реИрдз рдлреЛрди рдирдВрдмрд░ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    enterAddressError: "рдХреГрдкрдпрд╛ рдкрддреНрддрд╛ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    reminderDateFuture: "рд╕реНрдорд░рдгрдкрддреНрд░ рддрд╛рд░реАрдЦ рднрд╡рд┐рд╖реНрдпрд╛рдд рдЕрд╕рдгреЗ рдЖрд╡рд╢реНрдпрдХ рдЖрд╣реЗ",
    enterCustomMessageError: "рдХреГрдкрдпрд╛ рд╕рд╛рдиреБрдХреВрд▓ рд╕рдВрджреЗрд╢ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    error: "рддреНрд░реБрдЯреА",
    enterPhoneFirst: "рдХреГрдкрдпрд╛ рдкреНрд░рдердо рдлреЛрди рдирдВрдмрд░ рдкреНрд░рд╡рд┐рд╖реНрдЯ рдХрд░рд╛",
    smsNotAvailable: "SMS рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реА",
    smsNotAvailableMessage: "рдпрд╛ рдбрд┐рд╡реНрд╣рд╛рдЗрд╕рд╡рд░ SMS рдХрд╛рд░реНрдпрдХреНрд╖рдорддрд╛ рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реА",
    smsError: "SMS рддреНрд░реБрдЯреА",
    smsErrorMessage: "SMS рдкрд╛рдард╡рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.",
    success: "рдпрд╢рд╕реНрд╡реА",
    customerUpdatedSuccess: (date: string, time: string) => 
      `рдЧреНрд░рд╛рд╣рдХ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдЕрдкрдбреЗрдЯ рдХреЗрд▓рд╛! SMS рд╕реНрдорд░рдгрдкрддреНрд░ ${date} рд░реЛрдЬреА ${time} рд╡рд╛рдЬрддрд╛ рд╕реЗрдЯ рдХреЗрд▓реЗ.`,
    customerAddedSuccess: (date: string, time: string) => 
      `рдЧреНрд░рд╛рд╣рдХ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдЬреЛрдбрд▓рд╛! SMS рд╕реНрдорд░рдгрдкрддреНрд░ ${date} рд░реЛрдЬреА ${time} рд╡рд╛рдЬрддрд╛ рд╕реЗрдЯ рдХреЗрд▓реЗ.`,
    customerUpdatedSimple: "рдЧреНрд░рд╛рд╣рдХ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдЕрдкрдбреЗрдЯ рдХреЗрд▓рд╛!",
    customerAddedSimple: "рдЧреНрд░рд╛рд╣рдХ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдЬреЛрдбрд▓рд╛!",
    updateError: "рдЧреНрд░рд╛рд╣рдХ рдЕрдкрдбреЗрдЯ рдХрд░рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рддреБрдордЪреЗ рдЗрдВрдЯрд░рдиреЗрдЯ рдХрдиреЗрдХреНрд╢рди рддрдкрд╛рд╕рд╛ рдЖрдгрд┐ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.",
    saveError: "рдЧреНрд░рд╛рд╣рдХ рдЬрддрди рдХрд░рдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рддреБрдордЪреЗ рдЗрдВрдЯрд░рдиреЗрдЯ рдХрдиреЗрдХреНрд╢рди рддрдкрд╛рд╕рд╛ рдЖрдгрд┐ рдкреБрдиреНрд╣рд╛ рдкреНрд░рдпрддреНрди рдХрд░рд╛.",
  }
};

// Helper function to get translations
export const t = (key: string, lang: 'en' | 'mr' = 'mr', ...args: any[]) => {
  const translation = translations[lang][key as keyof typeof translations.en];

  if (typeof translation === 'function') {
  return (translation as (...params: unknown[]) => string)(...args);
}

  
  return translation || key;
};